{
  "$schema": "http://json-schema.org/draft-04/schema#",

  "definitions": {
    "VSSymbolOptions": {
      "type": "object",
      "description": "Provides configuration for locating and loading symbols to the debug adapter.",
      "properties": {
        "searchPaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of symbol server URLs (example: http\u200b://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.",
          "default": []
        },
        "searchMicrosoftSymbolServer": {
          "type": "boolean",
          "description": "If 'true' the Microsoft Symbol server (https\u200b://msdl.microsoft.com\u200b/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.",
          "default": false
        },
        "searchNuGetOrgSymbolServer": {
          "type": "boolean",
          "description": "If 'true' the NuGet.org symbol server (https\u200b://symbols.nuget.org\u200b/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.",
          "default": false
        },
        "cachePath": {
          "type": "string",
          "description": "Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.",
          "default": "~/.dotnet/symbolcache"
        },
        "moduleFilter": {
          "$ref": "#/definitions/VSSymbolOptionsModuleFilter",
          "description": "Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.",
          "default": {
            "mode": "loadAllButExcluded",
            "excludedModules": [
            ]
          }
        }
      }
    },
    "VSSymbolOptionsModuleFilter": {
      "type": "object",
      "description": "Provides configuration for loading symbols to the debug adapter.",
      "required": [ "mode" ],
      "properties": {
        "mode": {
          "type": "string",
          "enum": [ "loadAllButExcluded", "loadOnlyIncluded" ],
          "enumDescriptions": [
            "Load symbols for all modules unless the module is in the 'excludedModules' array.",
            "Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."
          ],
          "description": "Controls which of the two basic operating modes the module filter operates in.",
          "default": "loadAllButExcluded"
        },
        "excludedModules": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.",
          "default": [ "MyExampleModule.dll" ]
        },
        "includedModules": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.",
          "default": [ "MyExampleModule.dll" ]
        },
        "includeSymbolsNextToModules": {
          "type": "boolean",
          "description": "If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.",
          "default": true
        }
      }
    }
  }
}